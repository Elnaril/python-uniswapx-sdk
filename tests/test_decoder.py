import pytest

from eth_utils import to_hex

from uniswapx_sdk.decoder import ExclusiveDutchOrderDecoder

encoded_order_1 = "0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000065853ff5000000000000000000000000000000000000000000000000000000006585406d000000000000000000000000d198fbe60c49d4789525fc54567447518c7d2a110000000000000000000000000000000000000000000000000000000000000064000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4800000000000000000000000000000000000000000000000000000002bb3c538e00000000000000000000000000000000000000000000000000000002c07a14c700000000000000000000000000000000000000000000000000000000000002000000000000000000000000006000da47483062a0d734ba3dc7576ce6a0b645c400000000000000000000000098870a617e3b597aee459accba8f3fc721a32d7d046832bdb8181706d6a54120d33dd7a2a61a436f77c0447cc637168f002f92000000000000000000000000000000000000000000000000000000000065854079000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000005a98fcbea516cf06857215779fd812ca3bef1b320000000000000000000000000000000000000000000001117d708271c5b400000000000000000000000000000000000000000000000001117d708271c5b4000000000000000000000000000098870a617e3b597aee459accba8f3fc721a32d7d"  # noqa
encoded_order_2 = "0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000065861103000000000000000000000000000000000000000000000000000000006586113f000000000000000000000000d198fbe60c49d4789525fc54567447518c7d2a110000000000000000000000000000000000000000000000000000000000000064000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec70000000000000000000000000000000000000000000000000000000023c346000000000000000000000000000000000000000000000000000000000023c3460000000000000000000000000000000000000000000000000000000000000002000000000000000000000000006000da47483062a0d734ba3dc7576ce6a0b645c40000000000000000000000004f23986c549cee05e7f33c848a7bf33987c4777c04683283ea3e7043d172872bbd34fe8fe7e0279185047c91bb561fead96d8e00000000000000000000000000000000000000000000000000000000006586114b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000037cf182a982fe75000000000000000000000000000000000000000000000000033b4217e10853750000000000000000000000004f23986c549cee05e7f33c848a7bf33987c4777c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000015767c691704b00000000000000000000000000000000000000000000000000013e24f48b5b8600000000000000000000000037a8f295612602f2774d331e562be9e61b83a327"  # noqa
encoded_order_3 = "0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000006585b0f4000000000000000000000000000000000000000000000000000000006585b16c0000000000000000000000002008b6c3d07b061a84f790c035c2f6dc11a0be7000000000000000000000000000000000000000000000000000000000000000640000000000000000000000006982508145454ce325ddbe47a25d4ec3d23119330000000000000000000000000000000000000000160dfb61314b92edec0000000000000000000000000000000000000000000000160dfb61314b92edec00000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000006000da47483062a0d734ba3dc7576ce6a0b645c4000000000000000000000000711281c1b26aaed86e40e4caaf76c1962b45e1610468320376aec02a208f2ea2a2cddf98d85a7bf2946b147e4c6f23d11e1c5400000000000000000000000000000000000000000000000000000000006585b178000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000000000000000000000000000000000025aa7cdb60000000000000000000000000000000000000000000000000000000250af993d000000000000000000000000711281c1b26aaed86e40e4caaf76c1962b45e161"  # noqa

expected_decoded_result_1 = \
    (
        (
            (
                '0x6000da47483062a0d734ba3dc7576ce6a0b645c4',
                '0x98870a617e3b597aee459accba8f3fc721a32d7d',
                1993353691204648840289423428014503034142986202792066014221515793796204302848,
                1703231609,
                '0x0000000000000000000000000000000000000000',
                b''
            ),
            1703231477,
            1703231597,
            '0xd198fbe60c49d4789525fc54567447518c7d2a11',
            100,
            (
                '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',
                11731227534,
                11819160775
            ),
            (
                (
                    '0x5a98fcbea516cf06857215779fd812ca3bef1b32',
                    5045000000000000000000,
                    5045000000000000000000,
                    '0x98870a617e3b597aee459accba8f3fc721a32d7d'
                ),
            )
        ),
    )

expected_decoded_result_2 = \
    (
        (
            (
                '0x6000da47483062a0d734ba3dc7576ce6a0b645c4',
                '0x4f23986c549cee05e7f33c848a7bf33987c4777c',
                1993352132809132422536412771600334145383440524975514469909854636441542168064,
                1703285067,
                '0x0000000000000000000000000000000000000000',
                b''
            ),
            1703284995,
            1703285055,
            '0xd198fbe60c49d4789525fc54567447518c7d2a11',
            100,
            (
                '0xdac17f958d2ee523a2206206994597c13d831ec7',
                600000000,
                600000000
            ),
            (
                (
                    '0x0000000000000000000000000000000000000000',
                    251341222717881973,
                    232852476066812789,
                    '0x4f23986c549cee05e7f33c848a7bf33987c4777c'
                ),
                (
                    '0x0000000000000000000000000000000000000000',
                    377578201378891,
                    349803419229062,
                    '0x37a8f295612602f2774d331e562be9e61b83a327'
                )
            )
        ),
    )

expected_decoded_result_3 = \
    (
        (
            (
                '0x6000da47483062a0d734ba3dc7576ce6a0b645c4',
                '0x711281c1b26aaed86e40e4caaf76c1962b45e161',
                1993348669765935715085593652349553831283672773569203683678615720504025961472,
                1703260536,
                '0x0000000000000000000000000000000000000000',
                b''
            ),
            1703260404,
            1703260524,
            '0x2008b6c3d07b061a84f790c035c2f6dc11a0be70',
            100,
            (
                '0x6982508145454ce325ddbe47a25d4ec3d2311933',
                6825573358598051403667603456,
                6825573358598051403667603456
            ),
            (
                (
                    '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',
                    10110881206,
                    9943619901,
                    '0x711281c1b26aaed86e40e4caaf76c1962b45e161'
                ),
            )
        ),
    )


@pytest.mark.parametrize(
    "encoded_order, expected_decoded_order",
    (
        (encoded_order_1, expected_decoded_result_1),
        (encoded_order_2, expected_decoded_result_2),
        (encoded_order_3, expected_decoded_result_3),
    )
)
def test_exclusive_dutch_order_decoder(encoded_order, expected_decoded_order):
    decoder = ExclusiveDutchOrderDecoder()
    decoded_order = decoder.decode(to_hex(hexstr=encoded_order))
    assert decoded_order == expected_decoded_order
